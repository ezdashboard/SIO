[{"C:\\projects\\SIO\\src\\app\\add-user\\layout.js":"1","C:\\projects\\SIO\\src\\app\\add-user\\page.js":"2","C:\\projects\\SIO\\src\\app\\addmore\\layout.js":"3","C:\\projects\\SIO\\src\\app\\addmore\\page.js":"4","C:\\projects\\SIO\\src\\app\\API\\API.js":"5","C:\\projects\\SIO\\src\\app\\dashboard\\layout.js":"6","C:\\projects\\SIO\\src\\app\\dashboard\\page.js":"7","C:\\projects\\SIO\\src\\app\\dashboard\\[dashboard]\\layout.js":"8","C:\\projects\\SIO\\src\\app\\dashboard\\[dashboard]\\page.js":"9","C:\\projects\\SIO\\src\\app\\layout.js":"10","C:\\projects\\SIO\\src\\app\\page.js":"11","C:\\projects\\SIO\\src\\app\\profile\\layout.js":"12","C:\\projects\\SIO\\src\\app\\profile\\page.js":"13","C:\\projects\\SIO\\src\\app\\redux\\authReducer.js":"14","C:\\projects\\SIO\\src\\app\\redux\\propviders.js":"15","C:\\projects\\SIO\\src\\app\\redux\\slice.js":"16","C:\\projects\\SIO\\src\\app\\redux\\store.js":"17","C:\\projects\\SIO\\src\\app\\template\\ConfirmationModal.js":"18","C:\\projects\\SIO\\src\\app\\template\\ErrorModal.js":"19","C:\\projects\\SIO\\src\\app\\template\\ExcelDownloadButton.js":"20","C:\\projects\\SIO\\src\\app\\template\\Header.js":"21","C:\\projects\\SIO\\src\\app\\template\\Loading.js":"22","C:\\projects\\SIO\\src\\app\\template\\MsgModal.js":"23","C:\\projects\\SIO\\src\\app\\template\\ProfileEdit.js":"24","C:\\projects\\SIO\\src\\app\\template\\Sidebaar.js":"25","C:\\projects\\SIO\\src\\app\\template\\SuccessModal.js":"26","C:\\projects\\SIO\\src\\app\\users\\layout.js":"27","C:\\projects\\SIO\\src\\app\\users\\page.js":"28","C:\\projects\\SIO\\src\\app\\users\\[user]\\layout.js":"29","C:\\projects\\SIO\\src\\app\\users\\[user]\\page.js":"30"},{"size":507,"mtime":1728977003134,"results":"31","hashOfConfig":"32"},{"size":11016,"mtime":1729772587282,"results":"33","hashOfConfig":"32"},{"size":596,"mtime":1728977003137,"results":"34","hashOfConfig":"32"},{"size":17623,"mtime":1732861206867,"results":"35","hashOfConfig":"32"},{"size":109,"mtime":1728977003134,"results":"36","hashOfConfig":"32"},{"size":509,"mtime":1728977003144,"results":"37","hashOfConfig":"32"},{"size":29831,"mtime":1732860676618,"results":"38","hashOfConfig":"32"},{"size":519,"mtime":1728977003140,"results":"39","hashOfConfig":"32"},{"size":17948,"mtime":1732861481739,"results":"40","hashOfConfig":"32"},{"size":650,"mtime":1728977003147,"results":"41","hashOfConfig":"32"},{"size":5576,"mtime":1732772228420,"results":"42","hashOfConfig":"32"},{"size":505,"mtime":1728977003150,"results":"43","hashOfConfig":"32"},{"size":12456,"mtime":1728977003151,"results":"44","hashOfConfig":"32"},{"size":424,"mtime":1728977003152,"results":"45","hashOfConfig":"32"},{"size":221,"mtime":1728977003153,"results":"46","hashOfConfig":"32"},{"size":0,"mtime":1728977003153,"results":"47","hashOfConfig":"32"},{"size":210,"mtime":1728977003154,"results":"48","hashOfConfig":"32"},{"size":939,"mtime":1728977003157,"results":"49","hashOfConfig":"32"},{"size":287,"mtime":1728977003158,"results":"50","hashOfConfig":"32"},{"size":575,"mtime":1728977003159,"results":"51","hashOfConfig":"32"},{"size":3297,"mtime":1728977003159,"results":"52","hashOfConfig":"32"},{"size":307,"mtime":1728977003161,"results":"53","hashOfConfig":"32"},{"size":318,"mtime":1728977003161,"results":"54","hashOfConfig":"32"},{"size":2106,"mtime":1728977003162,"results":"55","hashOfConfig":"32"},{"size":2675,"mtime":1732860085976,"results":"56","hashOfConfig":"32"},{"size":293,"mtime":1728977003164,"results":"57","hashOfConfig":"32"},{"size":511,"mtime":1728977003167,"results":"58","hashOfConfig":"32"},{"size":8844,"mtime":1729772514542,"results":"59","hashOfConfig":"32"},{"size":509,"mtime":1728977003165,"results":"60","hashOfConfig":"32"},{"size":10529,"mtime":1730117664234,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uy4itq",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},"C:\\projects\\SIO\\src\\app\\add-user\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\add-user\\page.js",[],[],"C:\\projects\\SIO\\src\\app\\addmore\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\addmore\\page.js",[],[],"C:\\projects\\SIO\\src\\app\\API\\API.js",[],[],"C:\\projects\\SIO\\src\\app\\dashboard\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\dashboard\\page.js",["156"],[],"C:\\projects\\SIO\\src\\app\\dashboard\\[dashboard]\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\dashboard\\[dashboard]\\page.js",["157"],[],"C:\\projects\\SIO\\src\\app\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\page.js",["158"],[],"\"use client\"\r\nimport Head from 'next/head';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Roboto } from 'next/font/google';\r\nimport { React,useState,useEffect  } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/navigation';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport MsgModal from './template/MsgModal';\r\n\r\nconst roboto=Roboto({\r\n  weight:'900',\r\n  subsets:['latin'],\r\n  display:'swap'\r\n})\r\nconst robotolight=Roboto({\r\n  weight:'700',\r\n  subsets:['latin'],\r\n  display:'swap'\r\n})\r\n\r\n\r\nconst Login=()=> {\r\n  const router = useRouter()\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [closeIcon, setCloseIcon] = useState(false)\r\n  const [isValidEmail, setIsValidEmail] = useState(false)\r\n  const [msg, setFormStatus] = useState('') \r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [msgType, setMsgType] = useState('')\r\n  const [submitBtn, setSubmitBtn] = useState({})\r\n  const submitCloseIcon = ()=>{\r\n    setCloseIcon(false);\r\n  }\r\n  const [inputData, setInputData] = useState({\r\n    email:'',\r\n    password:''\r\n  });\r\n  const handleChange =(event)=> {\r\n    setModalShow(false)\r\n    const {name, value} = event.target;\r\n    setInputData((valuePre)=>{\r\n   return{\r\n     ...valuePre,\r\n     [name]:value\r\n   }\r\n });\r\n\r\n  }\r\n  const submitLogin =(e)=> {\r\n    setFormStatus(\"\");\r\n    setModalShow(false)\r\n    if(!inputData.email){\r\n      setFormStatus(\"Email can not be blank.\")\r\n      setCloseIcon(true);\r\n      setModalShow(true)\r\n      setMsgType('error')\r\n    // }else if(!isValidEmail){\r\n    //   setFormStatus(\"Invalid Email.\")\r\n    //   setCloseIcon(true);\r\n  }else if(!inputData.password){\r\n      setFormStatus(\"Password can not be blank.\")\r\n      setCloseIcon(true);  \r\n      setModalShow(true)\r\n      setMsgType('error')\r\n  }else{\r\n    setLoading(true)\r\n    axios.post(`${process.env.API_BASE_URL}login.php`,inputData,{\r\n      headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  }).then(res => {\r\n          const data = res.data;\r\n          if(res &&  res.data && res.data.error && res.data.error.length > 0){\r\n              setFormStatus( res.data.error);\r\n              setModalShow(true)\r\n              setMsgType('error')\r\n              setCloseIcon(true);\r\n              setLoading(false)\r\n          }else{\r\n              if(data){\r\n                setModalShow(false)\r\n                setMsgType('')\r\n                setFormStatus(\"\");\r\n                  //setCloseIcon(true);\r\n                  setSubmitBtn({\r\n                    padding: '1rem 0rem',\r\n                    display: 'block',\r\n                    color: '#46c737'\r\n                  })\r\n                  if(data.userData){\r\n                      localStorage.clear();\r\n                      localStorage.setItem(\"companyname\", data.userData[0]['companyname']);\r\n                      localStorage.setItem(\"title\", data.userData[0]['title']);\r\n                      localStorage.setItem(\"name\", data.userData[0]['name']);\r\n                      localStorage.setItem(\"email\", data.userData[0]['email']);\r\n                      localStorage.setItem(\"logo\", data.userData[0]['logo']);\r\n                      localStorage.setItem(\"userid\", data.userData[0]['userid']);\r\n                      localStorage.setItem(\"tokenAuth\", data.userData[0]['tokenAuth'].token);\r\n                      localStorage.setItem(\"image\", data.userData[0]['image']); \r\n                      localStorage.setItem(\"type\", data.userData[0]['type']); \r\n                      localStorage.setItem(\"contactno\", data.userData[0]['contactno']);\r\n                      localStorage.setItem(\"about\", data.userData[0]['about']);  \r\n                      localStorage.setItem(\"location\", data.userData[0]['location']);\r\n                      router.push('/dashboard')\r\n                      //setLoading(false)\r\n                  }\r\n                }\r\n          }\r\n    })\r\n    .catch(err => {\r\n      if(err){\r\n        setLoading(false)\r\n      }\r\n     })\r\n  }\r\n}\r\nuseEffect(() => {\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n      let userid = localStorage.getItem('tokenAuth');\r\n      if(userid){\r\n        router.push('/dashboard')\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n<>\r\n<Head>\r\n</Head>\r\n  <div className=\"container\">\r\n     <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n           <div className=\"login-form \">\r\n             <form  className=\"login \">\r\n             <h1 className={roboto.className}>Log In To SIO</h1> \r\n              {isLoading &&\r\n                <div className='loader'>\r\n                  <Spinner animation=\"border\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                  </Spinner>\r\n                </div>\r\n                }\r\n                {!isLoading &&\r\n                <span>\r\n                <input type=\"text\" placeholder=\"User Name\"  name=\"email\" value={inputData.email} onChange={handleChange}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" value={inputData.password} onChange={handleChange} />\r\n                <button className={robotolight.className} type=\"button\" onClick={()=>{\r\n                  submitLogin()\r\n                }}>Log In</button>\r\n                </span>\r\n                }\r\n              </form>\r\n            </div>  \r\n            {modalShow &&\r\n                <MsgModal \r\n                    msgType={msgType}\r\n                    msg={msg}\r\n                />\r\n            }\r\n        </div>\r\n     </div>\r\n    </div>\r\n</>\r\n\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n","C:\\projects\\SIO\\src\\app\\profile\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\profile\\page.js",[],[],"C:\\projects\\SIO\\src\\app\\redux\\authReducer.js",[],[],"C:\\projects\\SIO\\src\\app\\redux\\propviders.js",[],[],"C:\\projects\\SIO\\src\\app\\redux\\slice.js",[],[],"C:\\projects\\SIO\\src\\app\\redux\\store.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\ConfirmationModal.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\ErrorModal.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\ExcelDownloadButton.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\Header.js",["159","160"],[],"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faUser,faArrowRightFromBracket,faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport {React, useState,useEffect} from 'react'\r\nimport $ from \"jquery\";\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst Header =()=>{\r\n    const router = useRouter()\r\n    const [shHd, setshHd]= useState(true);\r\n    const [name, setName] = useState('')\r\n    const showMenu=()=>{\r\n            setshHd(!shHd)\r\n    }\r\n    const Logout = ()=>{\r\n        localStorage.clear();\r\n        router.push(\"/\")\r\n    }\r\n    const sideActive=()=>{\r\n        if (window.innerWidth > 0 && window.innerWidth <= 991) {\r\n            $(\".expovent__sidebar\").toggleClass(\"open\");\r\n        } else {\r\n            $(\".expovent__sidebar\").toggleClass(\"collapsed\");\r\n        }\r\n        $(\".app__offcanvas-overlay\").toggleClass(\"overlay-open\");\r\n    }\r\n    const sideCanvasActive= () =>{ \r\n        $(\".expovent__sidebar\").removeClass(\"collapsed\");\r\n        $(\".expovent__sidebar\").removeClass(\"open\");\r\n        $(\".app__offcanvas-overlay\").removeClass(\"overlay-open\");\r\n    }\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined' && window.localStorage) {\r\n            let userid = localStorage.getItem('tokenAuth');\r\n            if(!userid){\r\n             router.push('/')\r\n            }\r\n           let name = localStorage.getItem('name');\r\n           if(name){\r\n            setName(name)\r\n           }  \r\n        }\r\n     \r\n        }, []);\r\n  return(\r\n    <>\r\n    <div className=\"app__header__area\">\r\n        <div className=\"app__header-inner\">\r\n            <div className=\"app__header-left\">\r\n            <Link id=\"sidebar__active\" className=\"app__header-toggle\" href=\"#\" onClick={sideActive}>\r\n                <div className=\"bar-icon-2\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </Link>\r\n            </div>\r\n            <div className=\"app__header-right\">\r\n            \r\n            <div className=\"nav-item p-relative\">\r\n                <a id=\"userportfolio\" href=\"#\" onClick={()=>{\r\n                    showMenu()\r\n                }}>\r\n                    <div className=\"user__portfolio\">\r\n                        <div className=\"user__portfolio-thumb\">\r\n                        <img src=\"/assets/images/login.png\" alt=\"\"/> \r\n                        </div>\r\n                        <div className=\"user__content\">\r\n                        <span>\r\n                            { name ? name : ''}\r\n                            </span>\r\n                        <FontAwesomeIcon icon={faChevronDown} />\r\n                        </div>\r\n                    </div>\r\n                </a> \r\n                <div className=\"user__dropdown\" style={{display:shHd ? 'none' : 'block'}}>\r\n                    <ul>\r\n                        <li><FontAwesomeIcon icon={faUser} /><Link href=\"/profile\"> Profile</Link></li>\r\n                        <li onClick={()=>{Logout()}}><Link href=\"#\"><FontAwesomeIcon icon={faArrowRightFromBracket} />Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default Header","C:\\projects\\SIO\\src\\app\\template\\Loading.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\MsgModal.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\ProfileEdit.js",[],[],"C:\\projects\\SIO\\src\\app\\template\\Sidebaar.js",["161","162"],[],"C:\\projects\\SIO\\src\\app\\template\\SuccessModal.js",[],[],"C:\\projects\\SIO\\src\\app\\users\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\users\\page.js",["163"],[],"\"use client\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHouse,faPenToSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport $ from \"jquery\";\r\nimport { React,useState,useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Sidebaar from '../template/Sidebaar';\r\nimport Header from '../template/Header';\r\nimport Link from \"next/link\"\r\nimport axios from 'axios';\r\nimport Loader from '../template/Loading';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n\r\nconst Users=()=>{\r\n    const router = useRouter()\r\n    const [isLoading, setLoading] = useState(true)\r\n    const [totPage, setTotPage] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [limitp, setlimitp] =useState(5);\r\n    const [userType, setUserType] = useState('')\r\n    const [userStoreData, setUserStoreData] = useState([]);\r\n    const sideCanvasActive= () =>{ \r\n        $(\".expovent__sidebar\").removeClass(\"collapsed\");\r\n        $(\".expovent__sidebar\").removeClass(\"open\");\r\n        $(\".app__offcanvas-overlay\").removeClass(\"overlay-open\");    \r\n    }\r\n\r\n    const fetchData = async (page) => {\r\n        try {\r\n        const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.tokenAuth ? localStorage.tokenAuth :''}`,\r\n            },\r\n          };\r\n        axios.get(`${process.env.API_BASE_URL}users.php?page=${page}&limit=${limitp}`,config)\r\n          .then(res => {\r\n              const data = res.data.userData.map((item) => {\r\n                return {\r\n                  id: item.userid,\r\n                  name: item.name,\r\n                  email: item.email,\r\n                  contactno: item.contactno,\r\n                  companyname: item.companyname,\r\n                  title: item.title,\r\n                  logo: item.logo,\r\n                  type: item.type,\r\n                  status: item.status == '1' ? 'Active' : 'Inactive',\r\n                  image: item.image\r\n                }\r\n            }\r\n          )\r\n          setUserStoreData(data);\r\n          if(res.data.total && res.data.total > 0){\r\n            setTotPage(res.data.total)\r\n        }\r\n          setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            setLoading(false)\r\n         })\r\n        } catch (error) {\r\n            // Handle errors here\r\n            if(error && error.response.data && error.response.data.detail){\r\n              setMsg(error.response.data.detail);\r\n            }\r\n            // console.error(error);\r\n          }\r\n     }\r\n     const getPage = (url)=>{\r\n        setLoading(true)\r\n        if(url){\r\n        router.push(url)\r\n        }else{\r\n        setLoading(false)\r\n        }\r\n       // setLoading(false)\r\n     } \r\n      useEffect(() => {\r\n        if (typeof window !== 'undefined' && window.localStorage) {\r\n              let companyname = localStorage.getItem('companyname');\r\n              let title = localStorage.getItem('title');\r\n              let name = localStorage.getItem('name');\r\n              let email = localStorage.getItem('email');\r\n              let contactno = localStorage.getItem('contactno');\r\n              let about = localStorage.getItem('about');\r\n              let location = localStorage.getItem('location');\r\n              let image = localStorage.getItem('image');\r\n              let logo = localStorage.getItem('logo');\r\n              let updatedBy = localStorage.getItem('tokenAuth');\r\n              let userid = localStorage.getItem('userid');\r\n          }\r\n          fetchData(currentPage);\r\n          let localType = localStorage.getItem('type');\r\n          if(localType){\r\n           setUserType(localType)\r\n          }\r\n          }, [currentPage]);\r\n      return(\r\n        <>\r\n         <div className='page_-full-wrapper'>\r\n           <Sidebaar/>\r\n            <div className=\"app__offcanvas-overlay\" onClick={sideCanvasActive}></div>\r\n            <div className=\"page__body-wrapper\">\r\n             <Header />\r\n                <div className=\"body__overlay\"></div>\r\n                <div className=\"app__slide-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            <div className=\"breadcrumb__wrapper\">\r\n                                <div className=\"breadcrumb__inner\">\r\n                                    <div className=\"breadcrumb__icon\">\r\n                                      <FontAwesomeIcon icon={faHouse}/>\r\n                                    </div>\r\n                                    <div className=\"breadcrumb__menu\">\r\n                                        <nav>\r\n                                          <ul>\r\n                                              <li><span><a href=\"#\">Home</a></span></li>\r\n                                              <li className=\"active\"><span>User List</span></li>\r\n                                          </ul>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-xl-12 col-md-12'>\r\n                            { \r\n                             userType && userType == 'admin' &&   \r\n                                <div className='add-more-new'>\r\n                                <a href='#' onClick={()=>{\r\n                                    getPage('/add-user')\r\n                                }}>Add User</a>\r\n                              </div>\r\n                            }\r\n                              <div className='lms-table-wrap-p'>\r\n                               <Table >\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>S.No.</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Contact No.</th>\r\n                                    {/* <th>Role</th> */}\r\n                                    <th>Status</th>\r\n                                    <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                        { !isLoading &&\r\n                                <tbody>\r\n                                    { userStoreData && userStoreData.length > 0 && userStoreData.map((users, u)=>{\r\n                                        return(\r\n                                    <tr key={u}>\r\n                                        <td>{(limitp*(currentPage-1)) + (u+1)}.</td>\r\n                                        <td>{users.name}</td>\r\n                                        <td>{users.email}</td>\r\n                                        <td>{users.contactno}</td>\r\n                                        {/* <td>{users.type}</td> */}\r\n                                        <td>{users.status}</td>\r\n                                        <td><a href={'#'} onClick={()=>{\r\n                                    getPage('/users/'+users.id)\r\n                                }}><FontAwesomeIcon icon={faPenToSquare} /></a></td>\r\n                                    </tr>\r\n                                    )})}\r\n                                </tbody>}\r\n                                </Table>\r\n                              </div>\r\n                              {isLoading && <Loader />}\r\n                              <div className=\"pagination-wrap\">\r\n                                <ul className=\"pagination\">\r\n                                    {        currentPage > 1 &&                          \r\n                                        <li className=\"page-item\" onClick={()=>{\r\n                                        setCurrentPage(currentPage-1)}}><a href=\"#\" className='page-link'>{currentPage-1}</a></li>\r\n                                    }                                  \r\n                                        <li className=\"page-item active\"><span className=\"page-link\">{currentPage}<span className=\"visually-hidden\">{currentPage}</span></span></li>\r\n                                    {        currentPage < totPage &&                          \r\n                                        <li className=\"page-item\" onClick={()=>{\r\n                                        setCurrentPage(currentPage+1)}}><a href=\"#\" className='page-link'>{currentPage+1}</a></li>\r\n                                    }\r\n                                </ul>                                  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n        </>\r\n    )\r\n}\r\nexport default Users\r\n\r\n","C:\\projects\\SIO\\src\\app\\users\\[user]\\layout.js",[],[],"C:\\projects\\SIO\\src\\app\\users\\[user]\\page.js",["164"],[],"\"use client\"\r\nimport Sidebaar from '../../template/Sidebaar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { React,useState,useEffect  } from 'react';\r\nimport $ from \"jquery\";\r\nimport Header from '../../template/Header';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHouse } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport MsgModal from '../../template/MsgModal'\r\nimport Loader from '@/app/template/Loading';\r\n\r\nconst EditUser = ({params})=>{\r\n    const [msg, setFormStatus] = useState('')\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [submitBtn, setSubmitBtn] = useState({})\r\n    const [closeIcon, setCloseIcon] = useState(false)\r\n    const [isValidEmail, setIsValidEmail] = useState(false)\r\n    const [showManager, setShowManager] = useState(false)\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [msgType, setMsgType] = useState('')\r\n    const [inputData, setInputData] = useState({\r\n       name : '',\r\n       email : '',\r\n       updatedBy : '',\r\n       userid :''\r\n   });\r\n\r\n    const inputChangeData =(event)=> {\r\n       setModalShow(false)\r\n       setMsgType('')\r\n    const {name, value} = event.target;\r\n    // if(name && name==\"type\" && value && value ==\"user\"){\r\n    //   setShowManager(true);\r\n    // }else if(name && name==\"type\" && (!value || value !=\"user\")){\r\n    //   setShowManager(false);\r\n    // }\r\n    setInputData((valuePre)=>{\r\n    return{\r\n      ...valuePre,\r\n      [name]:value\r\n    }\r\n  });\r\n    }\r\n const sideCanvasActive= () =>{ \r\n     $(\".expovent__sidebar\").removeClass(\"collapsed\");\r\n     $(\".expovent__sidebar\").removeClass(\"open\");\r\n     $(\".app__offcanvas-overlay\").removeClass(\"overlay-open\");\r\n }\r\n const onSubmit = (e) => {\r\n    e.preventDefault()\r\n \r\n    setModalShow(false)\r\n    setMsgType('')\r\n    setSubmitBtn({\r\n      padding: '1rem 0rem',\r\n      display: 'block',\r\n      color: 'red'\r\n    });\r\n    if(inputData && inputData.email){\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      setIsValidEmail(emailRegex.test(inputData.email));\r\n      setModalShow(true)\r\n      setMsgType('error')\r\n    }\r\n    if(!inputData.name){\r\n       setModalShow(true)\r\n       setMsgType('error')\r\n      setFormStatus(\"Name can not be blank.\")\r\n      setCloseIcon(true);        \r\n    }else if(!inputData.email){\r\n      setFormStatus(\"Email can not be blank.\")\r\n      setCloseIcon(true);  \r\n      setModalShow(true)\r\n      setMsgType('error')\r\n                             \r\n    }else{\r\n        setLoading(true);\r\n      inputData.userid = params && params.user ? params.user : '';\r\n      inputData.updatedBy = userid ? userid : null \r\n      axios.post(`${process.env.API_BASE_URL}updateUser.php`,inputData,{\r\n        headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n        .then(res => {\r\n            const data = res.data;\r\n            if(res &&  res.data && res.data.error && res.data.error.length > 0){\r\n                setFormStatus(res.data.error);\r\n                setCloseIcon(true);\r\n                setModalShow(true)\r\n                setMsgType('error')\r\n            }else if(res &&  res.data && res.data.msg && res.data.msg.length > 0){\r\n                    //Router.push('/thankyou')\r\n                    setFormStatus(res.data.msg);\r\n                    setMsgType('success')\r\n                    setModalShow(true)\r\n                    setCloseIcon(true);\r\n                    setSubmitBtn({\r\n                      padding: '1rem 0rem',\r\n                      display: 'block',\r\n                      color: '#46c737'\r\n                    })\r\n                   // router.push('/users')\r\n                  }\r\n                  setLoading(false);\r\n  \r\n      })\r\n      .catch(err => {\r\n       })\r\n    }\r\n\r\n  }\r\n  const getUser = ()=>{\r\n    console.log('params',params)\r\n    if(params && params.user){\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.tokenAuth ? localStorage.tokenAuth :''}`,\r\n                },\r\n              };\r\n        setLoading(true);\r\n       axios.get(`${process.env.API_BASE_URL}getuser.php?userid=${params.user}`,config)\r\n       .then(res => {\r\n       // setLearningData(data);\r\n       setInputData({\r\n         userid : params.user,\r\n         name : res.data[0]['name'],\r\n         email : res.data[0]['email'],\r\n         status : res.data[0]['status']\r\n       })\r\n       setLoading(false);\r\n    })\r\n    .catch(err => {\r\n    })\r\n} catch (error) {\r\n    // Handle errors here\r\n    if(error && error.response.data && error.response.data.detail){\r\n      setMsg(error.response.data.detail);\r\n    }\r\n    // console.error(error);\r\n  }\r\n    }\r\n    \r\n }\r\n const [userid,setUserId] = useState(null)\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n        getUser()\r\n       let updatedBy = localStorage.getItem('tokenAuth');\r\n       let userid = localStorage.getItem('userid');\r\n       setUserId(updatedBy)\r\n    }\r\n    setMsgType('')\r\n    }, []);\r\n    return(\r\n        <>\r\n            <div className='page_-full-wrapper'>\r\n                <Sidebaar/>\r\n                <div className=\"app__offcanvas-overlay\" onClick={sideCanvasActive}></div>\r\n                <div className=\"page__body-wrapper\">\r\n                <Header/>\r\n                <div className=\"app__slide-wrapper\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12\">\r\n                                <div className=\"breadcrumb__wrapper\">\r\n                                    <div className=\"breadcrumb__inner\">\r\n                                        <div className=\"breadcrumb__icon\">\r\n                                            <FontAwesomeIcon icon={faHouse}/>\r\n                                        </div>\r\n                                        <div className=\"breadcrumb__menu\">\r\n                                            <nav>\r\n                                                <ul>\r\n                                                    <li><span><a href=\"#\">Home</a></span></li>\r\n                                                    <li className=\"active\"><span>Edit User</span></li>\r\n                                                </ul>\r\n                                            </nav>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            <div className='add-more-form'>\r\n                            {  !isLoading &&                  \r\n                                <form onSubmit={onSubmit}>\r\n                                    <div className='row'>\r\n                                    <div className='col-md-6'>\r\n                                        <div className='form-group'>\r\n                                            <level>Name*</level>\r\n                                            <input type='text' placeholder='Name*'  onChange={inputChangeData} name=\"name\" value={inputData.name}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-md-6'>\r\n                                        <div className='form-group'>\r\n                                            <level>Email*</level>\r\n                                            <input type='text' placeholder='Email*'  onChange={inputChangeData} name=\"email\" value={inputData.email} readOnly/>\r\n                                        </div>\r\n                                    </div>                                   \r\n                                    {/* <div className='col-md-6'>\r\n                                        <div className='form-group'>\r\n                                            <level>Role*</level>\r\n                                            <select onChange={inputChangeData} name=\"type\">\r\n                                            <option value={inputData.type}>{inputData.type ? inputData.type.toUpperCase() : ''}</option>\r\n                                                <option value=\"\">Select</option>\r\n                                                <option value=\"User\">User</option>\r\n                                                <option value=\"Manager\">Manager</option>\r\n                                            </select>\r\n                                            <input type='text' placeholder='Role*'/>\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className='col-md-6'>\r\n                                        <div className='form-group'>\r\n                                            <level>Status*</level>\r\n                                            <select onChange={inputChangeData} name=\"status\">\r\n                                            <option value={inputData.status}>{inputData.status== 1 ? 'Active' : 'Inactive'}</option>\r\n                                                <option value=\"1\">Active</option>\r\n                                                <option value=\"0\">Inactive</option>\r\n                                            </select>\r\n                                            {/* <input type='text' placeholder='Role*'/> */}\r\n                                        </div>\r\n                                    </div>                                    \r\n                                    <div className='col-md-6'>\r\n                                        <div className='form-group'>\r\n                                            <button>Update</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </form>\r\n                            }\r\n                                {isLoading && <Loader />}\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        {modalShow && msgType &&\r\n                            <MsgModal \r\n                            msgType={msgType}\r\n                            msg={msg}\r\n                            />\r\n                        }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default EditUser\r\n",{"ruleId":"165","severity":1,"message":"166","line":457,"column":16,"nodeType":"167","endLine":457,"endColumn":29,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":271,"column":8,"nodeType":"167","endLine":271,"endColumn":10,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"171","line":125,"column":6,"nodeType":"167","endLine":125,"endColumn":8,"suggestions":"172"},{"ruleId":"165","severity":1,"message":"171","line":45,"column":12,"nodeType":"167","endLine":45,"endColumn":14,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":67,"column":25,"nodeType":"176","endLine":67,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":30,"column":45,"nodeType":"176","endLine":30,"endColumn":114},{"ruleId":"174","severity":1,"message":"175","line":33,"column":45,"nodeType":"176","endLine":33,"endColumn":119},{"ruleId":"165","severity":1,"message":"177","line":99,"column":14,"nodeType":"167","endLine":99,"endColumn":27,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":156,"column":8,"nodeType":"167","endLine":156,"endColumn":10,"suggestions":"180"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLeadsData'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["183"],["184"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["186"],{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [currentPage, getLeadsData]",{"range":"198","text":"199"},"Update the dependencies array to be: [getData]",{"range":"200","text":"201"},"Update the dependencies array to be: [router]",{"range":"202","text":"203"},{"range":"204","text":"203"},"Update the dependencies array to be: [currentPage, fetchData]",{"range":"205","text":"206"},"Update the dependencies array to be: [getUser]",{"range":"207","text":"208"},[15211,15224],"[currentPage, getLeadsData]",[8755,8757],"[getData]",[4207,4209],"[router]",[1524,1526],[3729,3742],"[currentPage, fetchData]",[5055,5057],"[getUser]"]